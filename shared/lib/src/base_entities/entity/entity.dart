import 'package:shared/src/base_entities/entity/entity_interface.dart';

enum EntityState { deleted }

class Entity implements EntityInterface {
  String id;
  DateTime dateCreated;
  DateTime dateUpdated;
  bool flagForDeletion = false;
  Entity(
      {required this.id,
      required this.dateCreated,
      required this.dateUpdated,
      this.flagForDeletion = false});
  @override
  toJson() => {
        'id': id,
        'dateCreated': dateCreated.toUtc().toIso8601String(),
        'dateUpdated': dateUpdated.toUtc().toIso8601String(),
        'flagForDeletion': flagForDeletion.toString()
      };
  @override
  toJsonTransfer() => {
        'id': id,
        'dateCreated': dateCreated.toUtc().toIso8601String(),
        'dateUpdated': dateUpdated.toUtc().toIso8601String()
      };

  @override
  toParamStringList() => (toJson().keys.toList(), toJson().values.toList());

  @override
  joinData() => [
        id,
        dateCreated.toUtc().toIso8601String(),
        dateUpdated.toUtc().toIso8601String()
      ].join('|');
  //GENERATED BY CHATGPT.  FNV-1a hash algorithm
  @override
  getChecksum() {
    int _fnv1aHash(String data) {
      const int fnvPrime = 0x01000193;
      int hash = 0x811c9dc5;

      for (int i = 0; i < data.length; i++) {
        hash ^= data.codeUnitAt(i);
        hash = (hash * fnvPrime) & 0xFFFFFFFF;
      }
      return hash;
    }

    int hash = _fnv1aHash(this.joinData());
    return hash.toRadixString(16).padLeft(8, '0');
  }
}

abstract class EntityFactory<T extends Entity>
    implements EntityFactoryInterface<T> {
  @override
  dynamic fromJson(Map<String, dynamic> json) => throw UnimplementedError();
}
